{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAESC,U,EAAY;AAAA;;AAClB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;;AAEnC,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACmBO,WADnB,CAC+B,MAAKP,MADpC,EAEmBQ,GAFnB,CAEuBP,UAFvB,CAAd;;AAIAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH;;;qCAEc;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClC,oBAAIY,SAAU,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACqBO,WADrB,CACiC,OAAKP,MADtC,EAEqBiB,UAFrB,EAAd;AAGA,oBAAIC,cAAc,EAAlB;AACAF,uBAAOP,SAAP,GAAmB,aAAK;;AAEpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAU;AACN,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIK;AACDzB,gCAAQe,WAAR;AACH;AAEJ,iBAZD;;AAcAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAvBM,CAAP;AAwBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClC,oBAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACeO,WADf,CAC2B,OAAKP,MADhC,EAEe6B,KAFf,EAAd;;AAIAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,kCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,0CAAP;AACH,iBAHD;AAIH,aAXM,CAAP;AAYH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao{\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona( negociacao ){\r\n        return new Promise((resolve, reject) =>{\r\n            \r\n            let request = this._connection.transaction([this._store], 'readwrite')\r\n                                            .objectStore(this._store)\r\n                                            .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('N�o foi possivel adicionar a negocia��o');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos(  ) {\r\n        return new Promise((resolve, reject)=>{\r\n            let cursor  = this._connection.transaction([this._store], 'readwrite')\r\n                                              .objectStore(this._store)\r\n                                              .openCursor();\r\n            let negociacoes = [];\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if (atual){\r\n                    var dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor))\r\n                    atual.continue();\r\n                }else{\r\n                    resolve(negociacoes);\r\n                }\r\n                \r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('N�o foi possivel listar as negocia��es');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos( ){\r\n        return new Promise((resolve, reject)=>{\r\n            let request = this._connection.transaction([this._store], 'readwrite')\r\n                                        .objectStore(this._store)\r\n                                        .clear();\r\n\r\n            request.onsuccess = e => resolve('Negocia��es apagadas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('N�o foi possivel apagadas as negocia��es');\r\n            }\r\n        })\r\n    }\r\n}"]}