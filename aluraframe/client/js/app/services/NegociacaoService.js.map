{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","get","then","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","arrayAchatado","array","concat","error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoLista","isEquals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana(){\r\n        \r\n        return this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    return negociacoes.map( objeto => new Negociacao( new Date(objeto.data), objeto.quantidade, objeto.valor ));\r\n                })\r\n                .catch( erro => {\r\n                    console.log(erro);\r\n                    throw new Error('N�o foi possivel obter as negociacoes da semana');\r\n                });\r\n            \r\n    }\r\n    \r\n    obterNegociacoesDaSemanaAnterior(){\r\n        \r\n        return this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    return (negociacoes.map( objeto => new Negociacao( new Date(objeto.data), objeto.quantidade, objeto.valor )));\r\n                })\r\n                .catch( erro => {\r\n                    console.log(erro);\r\n                    throw new Error('N�o foi possivel obter as negociacoes da semana anterior');\r\n                });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        \r\n        return this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                     return (negociacoes.map( objeto => new Negociacao( new Date(objeto.data), objeto.quantidade, objeto.valor )));\r\n                })\r\n                .catch( erro => {\r\n                    console.log(erro);\r\n                    throw new Error('N�o foi possivel obter as negociacoes da semana retrasada');\r\n                });\r\n        \r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all( [this.obterNegociacoesDaSemana(), \r\n                            this.obterNegociacoesDaSemanaAnterior(), \r\n                            this.obterNegociacoesDaSemanaRetrasada()])\r\n                        .then(periodos => {\r\n                                            let negociacoes = periodos;\r\n                                            return (negociacoes.reduce((arrayAchatado, array)=> arrayAchatado.concat(array),[]))\r\n                        })\r\n                        .catch( error => {throw new Error(error)} );\r\n    }\r\n\r\n    cadastra( negociacao ){\r\n            \r\n          return  ConnectionFactory.getConnection()\r\n                             .then( connection => new NegociacaoDao(connection))\r\n                             .then( dao => dao.adiciona(negociacao))\r\n                             .then(()=> 'Negocia��o adicionada com sucesso')\r\n                             .catch( () => {throw new Error('N�o foi poss�vel adicionar a negocia��o')});\r\n    }\r\n\r\n    lista(){\r\n        \r\n        return ConnectionFactory.getConnection()\r\n                                .then( connection => new NegociacaoDao(connection))\r\n                                .then( dao => dao.listaTodos() )\r\n                                .catch( erro => {\r\n                                    console.log(erro)\r\n                                    throw new Error('N�o foi possivel obter as negocia��es');\r\n                                });\r\n\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory.getConnection()\r\n                                 .then( connection => new NegociacaoDao(connection))\r\n                                 .then(dao => dao.apagaTodos())\r\n                                 .then( () => 'Negocia��es apagadas com sucesso' )\r\n                                 .catch( erro => {\r\n                                    console.log(erro);\r\n                                    throw new Error('N�o foi possivel apagar as negocia��es')\r\n                                 } );\r\n    }\r\n\r\n    importa( listaAtual ){\r\n        return this.obterNegociacoes()\r\n                    .then(negociacoes => negociacoes.filter( negociacao => \r\n                        !listaAtual.some( negociacaoLista =>  negociacaoLista.isEquals(negociacao) ) ) )\r\n                    .catch(error => {\r\n                            console.log(error);\r\n                            throw new Error('N�o foi possivel importar a lista de negocia��es');\r\n                    });\r\n    }\r\n\r\n}"]}